name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: prithv33/wisecow-app:latest
          
      - name: Start Minikube with Ingress
        uses: medyagh/setup-minikube@latest
        with:
          addons: ingress

      - name: Install Cert-Manager
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --create-namespace \
            --version v1.12.0 \
            --set installCRDs=true

      - name: Wait for Cert-Manager pods to be ready
        run: |
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/instance=cert-manager \
          --timeout=5m -n cert-manager
          
      - name: Install KubeArmor
        run: |
          helm repo add kubearmor https://kubearmor.github.io/charts
          helm repo update
          helm install kubearmor-operator kubearmor/kubearmor-operator \
            --namespace kubearmor \
            --create-namespace
          
      - name: Wait for KubeArmor deployment to be ready
        run: |
          kubectl rollout status deployment kubearmor-operator -n kubearmor --timeout=5m
      
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/
          
      - name: Trigger a policy violation
        run: |
          # Get the name of the Wisecow pod
          POD_NAME=$(kubectl get pods -l app=wisecow -o jsonpath='{.items[0].metadata.name}')
          # Attempt to run /bin/sh inside the pod, which should be blocked
          kubectl exec -it $POD_NAME -- /bin/sh -c "echo 'This should be blocked'" || true
      
      - name: Get KubeArmor logs and verify violation
        run: |
          KUBE_ARMOR_POD=$(kubectl get pods -n kubearmor -l kubearmor-app=kubearmor --no-headers | awk '{print $1}')
          kubectl logs $KUBE_ARMOR_POD -n kubearmor | grep "PolicyBlocked"
