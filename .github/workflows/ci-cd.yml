name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/wisecow:latest

    - name: Install Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Create Kind Cluster
      run: kind create cluster

    - name: Install Cert-Manager
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.7.1/cert-manager.yaml
        kubectl wait --namespace cert-manager --for=condition=Available deployment/cert-manager --timeout=300s
        kubectl wait --namespace cert-manager --for=condition=Available deployment/cert-manager-webhook --timeout=300s
        kubectl wait --namespace cert-manager --for=condition=Available deployment/cert-manager-cainjector --timeout=300s

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.7.0

    - name: Install KubeArmor Operator
      run: |
        helm repo add kubearmor https://kubearmor.github.io/charts
        helm repo update
        helm install kubearmor-operator kubearmor/kubearmor-operator --set autoDeploy=false -n kubearmor --create-namespace

    - name: Wait for KubeArmor CRD
      run: |
        kubectl wait --for condition=established crd/kubearmorpolicies.security.kubearmor.com --timeout=5m

    - name: Apply Kubernetes Manifests
      run: kubectl apply -f k8s/
      
    - name: Check Deployed Resources
      run: |
        kubectl get all -n default
        kubectl get all -n kubearmor

    - name: Show logs
      if: always()
      run: kubectl get pods -A
